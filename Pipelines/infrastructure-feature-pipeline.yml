trigger: none

name: $(Date:yyyyMMdd)$(Rev:.r)

parameters:
  - name: deploymentChannel
    displayName: Deployment Channel
    type: string
    default: Feature Release
    values:
      - Feature Testing
      - Feature Release
  - name: isAmeBcpPrimaryEnvironment
    displayName: AME BCP is Primary Environment
    type: boolean
    default: false
  - name: isApaBcpPrimaryEnvironment
    displayName: APA BCP is Primary Environment
    type: boolean
    default: false
  - name: isEmaBcpPrimaryEnvironment
    displayName: EMA BCP is Primary Environment
    type: boolean
    default: false
  - name: storeSQLUser
    displayName: "Store SQL Developer Accounts (Lower Envs)"
    type: boolean
    default: false
  - name: permissionMsiInDb
    displayName: "Permission MSIs in DBs"
    type: boolean
    default: false

variables:
  environmentIndex: "1"
  pipelineId: 8370

stages:
  - stage: BUILD
    jobs:
      - template: build-templates/infrastructure-build-jobs-template.yml
        parameters:
          scriptCopyOnly: false
          validateTemplates: true

  - ${{ if and(eq(parameters.deploymentChannel, 'Feature Testing'), ne(variables['System.DefinitionId'], variables.pipelineId)) }}:
      - template: stage-templates/infrastructure-feature-stage-template.yml
        parameters:
          environmentIndex: ${{ variables.environmentIndex }}
          permissionMsiInDb: ${{ parameters.permissionMsiInDb }}
          storeSQLUser: ${{ parameters.storeSQLUser }}

  - ${{ if and(eq(parameters.deploymentChannel, 'Feature Release'), eq(variables['System.DefinitionId'], variables.pipelineId)) }}:
      - template: stage-templates/infrastructure-release-stage-template.yml
        parameters:
          isAmeBcpPrimaryEnvironment: ${{ parameters.isAmeBcpPrimaryEnvironment }}
          isApaBcpPrimaryEnvironment: ${{ parameters.isApaBcpPrimaryEnvironment }}
          isEmaBcpPrimaryEnvironment: ${{ parameters.isEmaBcpPrimaryEnvironment }}
          permissionMsiInDb: ${{ parameters.permissionMsiInDb }}
          storeSQLUser: ${{ parameters.storeSQLUser }}
