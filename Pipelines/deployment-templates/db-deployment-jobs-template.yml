parameters:
  pool: ""
  azureSubscription: ""
  geo: ""
  environment: ""
  environmentIndex: ""
  lifecycle: ""
  isPrimaryGeo: false
  deployDacpacs: true
  caseMasterDacpacFileName: ""
  containerDacpacFileName: ""
  masterDacpacFileName: ""

jobs:
  - job: MasterDatabaseDeployment
    condition: and(succeeded(), ${{ parameters.deployDacpacs }}, ${{ parameters.isPrimaryGeo }})
    workspace:
      clean: all
    pool: ${{ parameters.pool }}
    variables:
      - template: ../variables-templates/${{ parameters.environment }}-variables-template.yml
        parameters:
          environmentIndex: ${{ parameters.environmentIndex }}
      - template: ../variables-templates/${{ parameters.lifecycle }}-${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/release-variables-template.yml
        parameters:
          environment: ${{ parameters.environment }}
          isPrimaryGeo: ${{ parameters.isPrimaryGeo }}
      - template: ../variables-templates/build-variables-template.yml
    steps:
      - template: steps-templates/sql-database-deployment-steps-template.yml
        parameters:
          azureSubscription: "${{ parameters.azureSubscription }}"
          databaseName: "Navigator_Master"
          fileName: "${{ parameters.masterDacpacFileName }}"
          isContainerDb: false

  - job: CaseMasterDatabaseDeployment
    condition: and(succeeded(), ${{ parameters.deployDacpacs }})
    workspace:
      clean: all
    pool: ${{ parameters.pool }}
    variables:
      - template: ../variables-templates/${{ parameters.environment }}-variables-template.yml
        parameters:
          environmentIndex: ${{ parameters.environmentIndex }}
      - template: ../variables-templates/${{ parameters.lifecycle }}-${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/release-variables-template.yml
        parameters:
          environment: ${{ parameters.environment }}
          isPrimaryGeo: ${{ parameters.isPrimaryGeo }}
      - template: ../variables-templates/build-variables-template.yml
    steps:
      - template: steps-templates/sql-database-deployment-steps-template.yml
        parameters:
          azureSubscription: "${{ parameters.azureSubscription }}"
          databaseName: "Navigator_Case_Master"
          fileName: "${{ parameters.caseMasterDacpacFileName }}"
          isContainerDb: false

  - job: CreateDatabaseMatrix
    condition: and(succeeded(), ${{ parameters.deployDacpacs }})
    workspace:
      clean: all
    pool: ${{ parameters.pool }}
    variables:
      - template: ../variables-templates/${{ parameters.environment }}-variables-template.yml
        parameters:
          environmentIndex: ${{ parameters.environmentIndex }}
      - template: ../variables-templates/${{ parameters.lifecycle }}-${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/release-variables-template.yml
        parameters:
          environment: ${{ parameters.environment }}
          isPrimaryGeo: ${{ parameters.isPrimaryGeo }}
      - template: ../variables-templates/build-variables-template.yml
    steps:
      - template: steps-templates/database-matrix-creation-steps-template.yml

  - job: ContainerDatabaseDeployment
    condition: and(succeeded(), ${{ parameters.deployDacpacs }})
    workspace:
      clean: all
    pool: ${{ parameters.pool }}
    variables:
      - template: ../variables-templates/${{ parameters.environment }}-variables-template.yml
        parameters:
          environmentIndex: ${{ parameters.environmentIndex }}
      - template: ../variables-templates/${{ parameters.lifecycle }}-${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/${{ parameters.geo }}-variables-template.yml
      - template: ../variables-templates/release-variables-template.yml
        parameters:
          environment: ${{ parameters.environment }}
          isPrimaryGeo: ${{ parameters.isPrimaryGeo }}
      - template: ../variables-templates/build-variables-template.yml
    dependsOn: [CreateDatabaseMatrix]
    strategy:
      matrix: $[ dependencies.CreateDatabaseMatrix.outputs['matrix.containerMatrix'] ]
      maxParallel: 15
    steps:
      - template: steps-templates/sql-database-deployment-steps-template.yml
        parameters:
          azureSubscription: "${{ parameters.azureSubscription }}"
          fileName: "${{ parameters.containerDacpacFileName }}"
          isContainerDb: true

  - job: PipelineExecutionRetention
    condition: and(succeeded(), in(lower('${{ parameters.environment }}'), 'prod', 'bcp'))
    dependsOn: ContainerDatabaseDeployment
    workspace:
      clean: all
    pool: ${{ parameters.pool }}
    steps:
      - checkout: none
      - task: DownloadPipelineArtifact@2
        displayName: "Download Infrastructure Artifact"
        inputs:
          artifactName: Infrastructure
          path: $(Pipeline.Workspace)/Infrastructure
      
      - task: PowerShell@2
        displayName: 'Update Production Pipeline Execution Retention'
        inputs:        
          targetType: filePath
          filePath: '$(Pipeline.Workspace)/Infrastructure/PipelineScripts/Set-PipelineRetentionPolicy.ps1'
          arguments: '-AccessToken "Bearer $(System.AccessToken)" -DefinitionId "$(System.DefinitionId)" -OwnerId "User:$(Build.RequestedForId)" -RunId "$(Build.BuildId)" -CollectionUri "$(System.CollectionUri)" -TeamProject "$(System.TeamProject)"'